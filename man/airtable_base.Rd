% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/airtable_base.R
\name{airtable_base}
\alias{airtable_base}
\alias{get_base_schema}
\alias{list_base_tables}
\alias{list_bases}
\title{Get metadata for an Airtable base or list bases for an account}
\usage{
airtable_base(base = NULL, token = NULL, ...)

get_base_schema(
  base = NULL,
  token = NULL,
  simplifyVector = TRUE,
  ...,
  call = caller_env()
)

list_base_tables(base = NULL, token = NULL, ..., call = caller_env())

list_bases(bases = NULL, token = NULL, ...)
}
\arguments{
\item{base}{An Airtable base ID, an airtable object containing a base ID, or
a URL that can be parsed for a base ID. Optional if url or airtable are
supplied to the additional parameters passed to \code{\link[=req_airtable]{req_airtable()}}.}

\item{token}{Airtable personal access token, Defaults to \code{NULL} which is set
to environmental variable for "AIRTABLE_PAT" (from \code{\link[=get_airtable_pat]{get_airtable_pat()}}) or
"AIRTABLE_API_KEY" (from \code{\link[=get_airtable_api_key]{get_airtable_api_key()}}).}

\item{...}{Additional parameters passed to \code{\link[=req_airtable]{req_airtable()}}.}

\item{simplifyVector}{Should JSON arrays containing only primitives (i.e.
booleans, numbers, and strings) be caused to atomic vectors?}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}

\item{bases}{A character vectors of base ID or name values. If provided, the
results of list_bases are filtered to matching bases only. Defaults to
\code{NULL} which returns all bases associated with the personal access token or
API key.}
}
\value{
\itemize{
\item \code{\link[=airtable_base]{airtable_base()}} returns an \code{airtable_base_schema} object.
\item \code{\link[=get_base_schema]{get_base_schema()}} returns the response from the Airtable get base schema
API method or \code{\link[=list_base_tables]{list_base_tables()}} returns a tibble with the list of tables
from the schema response.
\item \code{\link[=list_bases]{list_bases()}} returns a tibble of base IDs, names, and permission levels.
}
}
\description{
Get an "airtable_base_schema" object, a tibble with a list of tables, or a
tibble with a list of bases associated with the provided personal access
token. Additional parameters are not used by \code{\link[=list_bases]{list_bases()}} at present.
}
\examples{
\dontrun{
base <- airtable_base("appXXXXXXXXXXXXX")

# read 'table1' from the base
tbl_data <- read_airtable(base$table1)

# view base schema
print(base$schema)
}
}
