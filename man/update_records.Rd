% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_records.R
\name{update_records}
\alias{update_records}
\title{Update records in an Airtable table}
\usage{
update_records(
  data,
  airtable = NULL,
  airtable_id_col = NULL,
  columns = tidyselect::everything(),
  records = NULL,
  safely = TRUE,
  return_json = FALSE,
  ...
)
}
\arguments{
\item{data}{A \code{data.frame} containing the fields to update. If records is
\code{NULL}, data must include a column of record IDs (named by airtable_id_col)
or rownames with record IDs.}

\item{airtable}{An \code{airtable} object. Optional if url or base and table are
provided with additional parameters passed to \code{\link[=airtable_request]{airtable_request()}}.}

\item{airtable_id_col}{Column containing Airtable record IDs. Not required if
record IDs are stored in row names as returned from \code{\link[=read_airtable]{read_airtable()}}}

\item{columns}{Columns in the data to update on Airtable. Can be a vector of
character strings, unquoted column names, or a tidyselect helper. Defaults
to \code{\link[tidyselect:everything]{tidyselect::everything()}}. See
\url{https://tidyselect.r-lib.org/reference/index.html#language-and-helpers}
for documentation on helpers.}

\item{records}{A character vector of record IDs indicating which Airtable
records to replace with the updated values from data. Optional if data has
a record ID column (named by airtable_id_col) or rownames with record IDs.
Defaults to \code{NULL}.}

\item{safely}{If \code{TRUE}, confirm number and names of columns to update and
number of rows before executing update.}

\item{return_json}{If \code{TRUE}, return JSON repsponse from the Airtable web API
as a list. If \code{FALSE} (default), return input data.}

\item{...}{
  Arguments passed on to \code{\link[=airtable_request]{airtable_request}}
  \describe{
    \item{\code{url}}{A URL for an API call or an Airtable view. If url is provided and
is a valid URL, \code{\link[=airtable_request]{airtable_request()}} returns  \code{httr2::request(url)}. url
is optional if airtable \emph{or} base and table are supplied. If url is an
Airtable view, any additional base or table values provided are ignored. If
airtable is provided, any additional value provided to url is ignored. For
the metadata API (where only a base ID is required) include \code{require_base = TRUE} to pass to \code{\link[=check_airtable_api_url]{check_airtable_api_url()}} when creating a request.}
    \item{\code{base}}{Airtable base id starting with with "app". Optional if url or
airtable are supplied or if require_base is \code{FALSE}. base and table are
both required if url and airtable are \code{NULL} and require_base is \code{TRUE}.}
    \item{\code{table}}{Airtable table id or name. Table ID values are strings starting
with "tbl". Optional if require_table is \code{FALSE}.}
    \item{\code{view}}{Airtable view ID. View ID values starts with "viw". Optional if
require_view is \code{FALSE}.}
    \item{\code{require_base}}{If \code{TRUE} (default), the string "app" must be included in
the supplied url.}
    \item{\code{require_table}}{If \code{TRUE}, the string "tbl" must be included in the
supplied url. If a string with a table name is provided, the string must be
part of the string supplied to url. If \code{FALSE} (default), there is no check
for a table being present in the URL.}
    \item{\code{require_view}}{If \code{TRUE}, the string "viw" must be included in the
string supplied to url. If \code{FALSE} (default), there is no check
for a view being present in the URL.}
  }}
}
\value{
A \code{data.frame} (invisibly) of the input data, to be stored as an object
or piped into further additional functions.
}
\description{
Update one or more fields in an Airtable table.
}
\details{
For more information on the Airtable API, see
\url{https://airtable.com/developers/web/api/update-record} or
\url{https://airtable.com/developers/web/api/update-multiple-records}.
}
